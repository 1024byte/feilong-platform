/*
 * Copyright (C) 2008 feilong (venusdrogon@163.com)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *         http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package com.feilong.tools.security.oneway;

import org.junit.Test;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import com.feilong.tools.security.BaseSecurityTest;

/**
 * The Class SHA1UtilTest.
 * 
 * @author <a href="mailto:venusdrogon@163.com">金鑫</a>
 * @version 1.0 2011-2-7 上午01:12:36
 */
@SuppressWarnings("all")
//无访问控制符修饰的内容可以被同一个包中的类访问，
class SHA1UtilTest extends BaseSecurityTest{

	/** The Constant log. */
	private static final Logger	log	= LoggerFactory.getLogger(SHA1UtilTest.class);

	/**
	 * {@link com.feilong.tools.security.oneway.MD5Util#encodeFile(java.lang.String)} 的测试方法。
	 */
	@Test
	public void encodeFile(){
		log.debug(SHA1Util.encodeFile("E:\\DataCommon\\Java\\JDK API 1.6.0 中文版.CHM"));
	}

	/**
	 * Encode1.
	 */
	@Test
	public void encode1(){
		log.debug(debugSecurityValue(SHA1Util.encode("521000")));
		log.debug(debugSecurityValue(SHA1Util.encode("2" + "5000" + "200000" + "nikejdistore")));
		String origin = "sdadadadadaadasasdasdadas"
						+ "dasdadasdadadasdasdasdadasdasdadadadadasdadadadad"
						+ "aaadasdasdasdasdadadadadaadasasdasdadasdasda"
						+ "dasdadadasdasdasdadas"
						+ "dasdadadadadasdadadadadaaadasdasdasdasasda"
						+ "sdasdasdasdasdasdasdadasaddssadsaadsasdsdadadadadaa"
						+ "dasasdasdadasdasdadasdadadasdasdasdadasdasdadadadadasdadadadadaaadasdasdasdasdada"
						+ "dadadaadasasdasdadasdasdadasdadadasdasdasdadasdasdadadadadasdadadadadaaadasdasdasdasasdasdasdasdasdasdasdasdadasaddssadsaadsasdasdasdasdasdasdasdasdadasaddssadsaadasdsdadadadadaadasasdasdadasdasdadasdadadasdasdasdadasdasdadadadadasdadadadadaaadasdasdasdasdadadadadaadasasdasdadasdasdadasdadadasdasdasdadasdasdadadadadasdadadadadaaadasdasdasdasasdasdasdasdasdasdasdasdadasaddssadsaadsasdsdadadadadaadasasdasdadasdasdadasdadadasdasdasdadasdasdadadadadasdadadadadaaadasdasdasdasdadadadadaadasasdasdadasdasdadasdadadasdasdasdadasdasdadadadadasdadadadadaaadasdasdasdasasdasdasdasdasdasdasdasdadasaddssadsaadsasdasdasdasdasdasdasdasdadasaddssadsaadasdasdasdasdasdasdasdadasaddssadsaadasdasdasdasdasdasdadasaddssadsaadsdadadadadaadasasdasdadasdasdadasdadadasdasdasdadasdasdadadadadasdadadadadaaadasdasdasdasdadadadadaadasasdasdadasdasdadasdadadasdasdasdadasdasdadadadadasdadadadadaaadasdasdasdasasdasdasdasdasdasdasdasdadasaddssadsaadsasdsdadadadadaadasasdasdadasdasdadasdadadasdasdasdadasdasdadadadadasdadadadadaaadasdasdasdasdadadadadaadasasdasdadasdasdadasdadadasdasdasdadasdasdadadadadasdadadadadaaadasdasdasdasasdasdasdasdasdasdasdasdadasaddssadsaadsasdasdasdasdasdasdasdasdadasaddssadsaadasdsdadadadadaadasasdasdadasdasdadasdadadasdasdasdadasdasdadadadadasdadadadadaaadasdasdasdasdadadadadaadasasdasdadasdasdadasdadadasdasdasdadasdasdadadadadasdadadadadaaadasdasdasdasasdasdasdasdasdasdasdasdadasaddssadsaadsasdsdadadadadaadasasdasdadasdasdadasdadadasdasdasdadasdasdadadadadasdadadadadaaadasdasdasdasdadadadadaad"
						+ "dadadaadasasdasdadasdasdadasdadadasdasdasdadasdasdadadadadasdadadadadaaadasdasdasdasasdasdasdasdasdasdasdasdadasaddssadsaadsasdasdasdasdasdasdasdasdadasaddssadsaadasdsdadadadadaadasasdasdadasdasdadasdadadasdasdasdadasdasdadadadadasdadadadadaaadasdasdasdasdadadadadaadasasdasdadasdasdadasdadadasdasdasdadasdasdadadadadasdadadadadaaadasdasdasdasasdasdasdasdasdasdasdasdadasaddssadsaadsasdsdadadadadaadasasdasdadasdasdadasdadadasdasdasdadasdasdadadadadasdadadadadaaadasdasdasdasdadadadadaadasasdasdadasdasdadasdadadasdasdasdadasdasdadadadadasdadadadadaaadasdasdasdasasdasdasdasdasdasdasdasdadasaddssadsaadsasdasdasdasdasdasdasdasdadasaddssadsaadasdasdasdasdasdasdasdadasaddssadsaadasdasdasdasdasdasdadasaddssadsaadsdadadadadaadasasdasdadasdasdadasdadadasdasdasdadasdasdadadadadasdadadadadaaadasdasdasdasdadadadadaadasasdasdadasdasdadasdadadasdasdasdadasdasdadadadadasdadadadadaaadasdasdasdasasdasdasdasdasdasdasdasdadasaddssadsaadsasdsdadadadadaadasasdasdadasdasdadasdadadasdasdasdadasdasdadadadadasdadadadadaaadasdasdasdasdadadadadaadasasdasdadasdasdadasdadadasdasdasdadasdasdadadadadasdadadadadaaadasdasdasdasasdasdasdasdasdasdasdasdadasaddssadsaadsasdasdasdasdasdasdasdasdadasaddssadsaadasdsdadadadadaadasasdasdadasdasdadasdadadasdasdasdadasdasdadadadadasdadadadadaaadasdasdasdasdadadadadaadasasdasdadasdasdadasdadadasdasdasdadasdasdadadadadasdadadadadaaadasdasdasdasasdasdasdasdasdasdasdasdadasaddssadsaadsasdsdadadadadaadasasdasdadasdasdadasdadadasdasdasdadasdasdadadadadasdadadadadaaadasdasdasdasdadadadadaad"
						+ "dadadaadasasdasdadasdasdadasdadadasdasdasdadasdasdadadadadasdadadadadaaadasdasdasdasasdasdasdasdasdasdasdasdadasaddssadsaadsasdasdasdasdasdasdasdasdadasaddssadsaadasdsdadadadadaadasasdasdadasdasdadasdadadasdasdasdadasdasdadadadadasdadadadadaaadasdasdasdasdadadadadaadasasdasdadasdasdadasdadadasdasdasdadasdasdadadadadasdadadadadaaadasdasdasdasasdasdasdasdasdasdasdasdadasaddssadsaadsasdsdadadadadaadasasdasdadasdasdadasdadadasdasdasdadasdasdadadadadasdadadadadaaadasdasdasdasdadadadadaadasasdasdadasdasdadasdadadasdasdasdadasdasdadadadadasdadadadadaaadasdasdasdasasdasdasdasdasdasdasdasdadasaddssadsaadsasdasdasdasdasdasdasdasdadasaddssadsaadasdasdasdasdasdasdasdadasaddssadsaadasdasdasdasdasdasdadasaddssadsaadsdadadadadaadasasdasdadasdasdadasdadadasdasdasdadasdasdadadadadasdadadadadaaadasdasdasdasdadadadadaadasasdasdadasdasdadasdadadasdasdasdadasdasdadadadadasdadadadadaaadasdasdasdasasdasdasdasdasdasdasdasdadasaddssadsaadsasdsdadadadadaadasasdasdadasdasdadasdadadasdasdasdadasdasdadadadadasdadadadadaaadasdasdasdasdadadadadaadasasdasdadasdasdadasdadadasdasdasdadasdasdadadadadasdadadadadaaadasdasdasdasasdasdasdasdasdasdasdasdadasaddssadsaadsasdasdasdasdasdasdasdasdadasaddssadsaadasdsdadadadadaadasasdasdadasdasdadasdadadasdasdasdadasdasdadadadadasdadadadadaaadasdasdasdasdadadadadaadasasdasdadasdasdadasdadadasdasdasdadasdasdadadadadasdadadadadaaadasdasdasdasasdasdasdasdasdasdasdasdadasaddssadsaadsasdsdadadadadaadasasdasdadasdasdadasdadadasdasdasdadasdasdadadadadasdadadadadaaadasdasdasdasdadadadadaad"
						+ "dadadaadasasdasdadasdasdadasdadadasdasdasdadasdasdadadadadasdadadadadaaadasdasdasdasasdasdasdasdasdasdasdasdadasaddssadsaadsasdasdasdasdasdasdasdasdadasaddssadsaadasdsdadadadadaadasasdasdadasdasdadasdadadasdasdasdadasdasdadadadadasdadadadadaaadasdasdasdasdadadadadaadasasdasdadasdasdadasdadadasdasdasdadasdasdadadadadasdadadadadaaadasdasdasdasasdasdasdasdasdasdasdasdadasaddssadsaadsasdsdadadadadaadasasdasdadasdasdadasdadadasdasdasdadasdasdadadadadasdadadadadaaadasdasdasdasdadadadadaadasasdasdadasdasdadasdadadasdasdasdadasdasdadadadadasdadadadadaaadasdasdasdasasdasdasdasdasdasdasdasdadasaddssadsaadsasdasdasdasdasdasdasdasdadasaddssadsaadasdasdasdasdasdasdasdadasaddssadsaadasdasdasdasdasdasdadasaddssadsaadsdadadadadaadasasdasdadasdasdadasdadadasdasdasdadasdasdadadadadasdadadadadaaadasdasdasdasdadadadadaadasasdasdadasdasdadasdadadasdasdasdadasdasdadadadadasdadadadadaaadasdasdasdasasdasdasdasdasdasdasdasdadasaddssadsaadsasdsdadadadadaadasasdasdadasdasdadasdadadasdasdasdadasdasdadadadadasdadadadadaaadasdasdasdasdadadadadaadasasdasdadasdasdadasdadadasdasdasdadasdasdadadadadasdadadadadaaadasdasdasdasasdasdasdasdasdasdasdasdadasaddssadsaadsasdasdasdasdasdasdasdasdadasaddssadsaadasdsdadadadadaadasasdasdadasdasdadasdadadasdasdasdadasdasdadadadadasdadadadadaaadasdasdasdasdadadadadaadasasdasdadasdasdadasdadadasdasdasdadasdasdadadadadasdadadadadaaadasdasdasdasasdasdasdasdasdasdasdasdadasaddssadsaadsasdsdadadadadaadasasdasdadasdasdadasdadadasdasdasdadasdasdadadadadasdadadadadaaadasdasdasdasdadadadadaad"
						+ "dadadaadasasdasdadasdasdadasdadadasdasdasdadasdasdadadadadasdadadadadaaadasdasdasdasasdasdasdasdasdasdasdasdadasaddssadsaadsasdasdasdasdasdasdasdasdadasaddssadsaadasdsdadadadadaadasasdasdadasdasdadasdadadasdasdasdadasdasdadadadadasdadadadadaaadasdasdasdasdadadadadaadasasdasdadasdasdadasdadadasdasdasdadasdasdadadadadasdadadadadaaadasdasdasdasasdasdasdasdasdasdasdasdadasaddssadsaadsasdsdadadadadaadasasdasdadasdasdadasdadadasdasdasdadasdasdadadadadasdadadadadaaadasdasdasdasdadadadadaadasasdasdadasdasdadasdadadasdasdasdadasdasdadadadadasdadadadadaaadasdasdasdasasdasdasdasdasdasdasdasdadasaddssadsaadsasdasdasdasdasdasdasdasdadasaddssadsaadasdasdasdasdasdasdasdadasaddssadsaadasdasdasdasdasdasdadasaddssadsaadsdadadadadaadasasdasdadasdasdadasdadadasdasdasdadasdasdadadadadasdadadadadaaadasdasdasdasdadadadadaadasasdasdadasdasdadasdadadasdasdasdadasdasdadadadadasdadadadadaaadasdasdasdasasdasdasdasdasdasdasdasdadasaddssadsaadsasdsdadadadadaadasasdasdadasdasdadasdadadasdasdasdadasdasdadadadadasdadadadadaaadasdasdasdasdadadadadaadasasdasdadasdasdadasdadadasdasdasdadasdasdadadadadasdadadadadaaadasdasdasdasasdasdasdasdasdasdasdasdadasaddssadsaadsasdasdasdasdasdasdasdasdadasaddssadsaadasdsdadadadadaadasasdasdadasdasdadasdadadasdasdasdadasdasdadadadadasdadadadadaaadasdasdasdasdadadadadaadasasdasdadasdasdadasdadadasdasdasdadasdasdadadadadasdadadadadaaadasdasdasdasasdasdasdasdasdasdasdasdadasaddssadsaadsasdsdadadadadaadasasdasdadasdasdadasdadadasdasdasdadasdasdadadadadasdadadadadaaadasdasdasdasdadadadadaad"
						+ "dadadaadasasdasdadasdasdadasdadadasdasdasdadasdasdadadadadasdadadadadaaadasdasdasdasasdasdasdasdasdasdasdasdadasaddssadsaadsasdasdasdasdasdasdasdasdadasaddssadsaadasdsdadadadadaadasasdasdadasdasdadasdadadasdasdasdadasdasdadadadadasdadadadadaaadasdasdasdasdadadadadaadasasdasdadasdasdadasdadadasdasdasdadasdasdadadadadasdadadadadaaadasdasdasdasasdasdasdasdasdasdasdasdadasaddssadsaadsasdsdadadadadaadasasdasdadasdasdadasdadadasdasdasdadasdasdadadadadasdadadadadaaadasdasdasdasdadadadadaadasasdasdadasdasdadasdadadasdasdasdadasdasdadadadadasdadadadadaaadasdasdasdasasdasdasdasdasdasdasdasdadasaddssadsaadsasdasdasdasdasdasdasdasdadasaddssadsaadasdasdasdasdasdasdasdadasaddssadsaadasdasdasdasdasdasdadasaddssadsaadsdadadadadaadasasdasdadasdasdadasdadadasdasdasdadasdasdadadadadasdadadadadaaadasdasdasdasdadadadadaadasasdasdadasdasdadasdadadasdasdasdadasdasdadadadadasdadadadadaaadasdasdasdasasdasdasdasdasdasdasdasdadasaddssadsaadsasdsdadadadadaadasasdasdadasdasdadasdadadasdasdasdadasdasdadadadadasdadadadadaaadasdasdasdasdadadadadaadasasdasdadasdasdadasdadadasdasdasdadasdasdadadadadasdadadadadaaadasdasdasdasasdasdasdasdasdasdasdasdadasaddssadsaadsasdasdasdasdasdasdasdasdadasaddssadsaadasdsdadadadadaadasasdasdadasdasdadasdadadasdasdasdadasdasdadadadadasdadadadadaaadasdasdasdasdadadadadaadasasdasdadasdasdadasdadadasdasdasdadasdasdadadadadasdadadadadaaadasdasdasdasasdasdasdasdasdasdasdasdadasaddssadsaadsasdsdadadadadaadasasdasdadasdasdadasdadadasdasdasdadasdasdadadadadasdadadadadaaadasdasdasdasdadadadadaad"
						+ "asasdasdadasdasdadasdadadasdasdasdadasdasdadadadadasdadadadadaaadasdasdasdasa"
						+ "sdasdasdasdasdasdasdasdadasaddssadsaadsasdasdasdasdasdasdasdasdadas"
						+ "addssadsaadasdasdasdasaddssadsaadasdasdasdasdasdasdasdadasaddssadsaadasdasdasdaaddssadsaadasdasdasdasdasdasdasdadasaddssadsaadasdasdasdaaddssadsaadasdasdasdasdasdasdasdadasaddssadsaadasdasdasdaaddssadsaadasdasdasdasdasdasdasdadasaddssadsaadasdasdasdaaddssadsaadasdasdasdasdasdasdasdadasaddssadsaadasdasdasdaaddssadsaadasdasdasdasdasdasdasdadasaddssadsaadasdasdasdaaddssadsaadasdasdasdasdasdasdasdadasaddssadsaadasdasdasdadasdasdasdadasaddssadsaadasdasdasda"
						+ "sdasdasdadasaddssadsaad";
		log.debug(debugSecurityValue(SHA1Util.encode(origin)));
	}

}
