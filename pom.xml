<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.feilong.platform</groupId>
	<artifactId>parent</artifactId>
	<version>1.2.2-SNAPSHOT</version>
	<packaging>pom</packaging>

	<name>feilong-platform</name>
	<!-- 成立年份 -->
	<inceptionYear>2008</inceptionYear>

	<description>Reduce development, Release ideas</description>
	<url>http://venusdrogon.github.io/feilong-platform/</url>

	<!-- 软件配置管理，如cvs 和svn -->
	<scm>
		<url>https://github.com/venusdrogon/feilong-platform.git</url>
		<connection>scm:git:git@github.com:venusdrogon/feilong-platform.git</connection>
		<developerConnection>scm:git:ssh://git@github.com:venusdrogon/feilong-platform.git</developerConnection>
	</scm>

	<!--****************************定义属性 properties************************************* -->
	<properties>
		<version.feilong-platform>${project.version}</version.feilong-platform>
		<version.feilong-common-test>${project.version}</version.feilong-common-test>

		<!-- 让整个项目统一字符集编码 -->
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

		<!-- **********************begin maven-compiler-plugin config******************************************* -->
		<maven-compiler-plugin.source>1.6</maven-compiler-plugin.source>
		<maven-compiler-plugin.target>1.6</maven-compiler-plugin.target>
		<maven-compiler-plugin.encoding>${project.build.sourceEncoding}</maven-compiler-plugin.encoding>
		<!-- **********************end maven-compiler-plugin config******************************************* -->

		<!--****************************第三方************************************ -->

		<!--*********************begin dependency plugins version************************************ -->
		<version.aspectjweaver>1.6.8</version.aspectjweaver>

		<version.commons-beanutils>1.9.2</version.commons-beanutils>
		<version.commons-codec>1.9</version.commons-codec>
		<version.commons-collections>3.2.1</version.commons-collections>
		<version.commons-configuration>1.10</version.commons-configuration>
		<version.commons-digester>2.1</version.commons-digester>

		<version.commons-email>1.3.3</version.commons-email>

		<version.commons-fileupload>1.3.1</version.commons-fileupload>

		<!-- The Commons HttpClient project is now end of life, and is no longer being developed. It has been replaced by the Apache HttpComponents project in its HttpClient
			and HttpCore modules, which offer better performance and more flexibility. -->
		<!-- HttpClient was started in 2001 as a subproject of the Jakarta Commons, based on code developed by the Jakarta Slide project. It was promoted out of the Commons
			in 2004, graduating to a separate Jakarta project. In 2005, the HttpComponents project at Jakarta was created, with the task of developing a successor to HttpClient
			3.x and to maintain the existing codebase until the new one is ready to take over. The Commons project, cradle of HttpClient, left Jakarta in 2007 to become an
			independent
			Top Level Project. Later in the same year, the HttpComponents project also left Jakarta to become an independent Top Level Project, taking the responsibility
			for
			maintaining HttpClient with it. -->
		<version.commons-httpclient>3.1</version.commons-httpclient>

		<!-- base on jdk1.2 legacy(won't update) -->
		<version.commons-lang>2.6</version.commons-lang>
		<!-- base on jdk1.6 -->
		<version.commons-lang3>3.4</version.commons-lang3>

		<version.commons-logging>1.2</version.commons-logging>

		<version.commons-io>2.4</version.commons-io>
		<version.commons-net>3.2</version.commons-net>
		<version.commons-jexl>2.1.1</version.commons-jexl>

		<version.dom4j>1.6.1</version.dom4j>

		<version.easymock>3.1</version.easymock>

		<version.javamail>1.4.7</version.javamail>

		<!-- org.json -->
		<version.org.json>20141113</version.org.json>

		<!-- net.sf.json-lib -->
		<version.json-lib>2.4</version.json-lib>
		<version.xom>1.2.5</version.xom>

		<version.jsp-api>2.2</version.jsp-api>
		<version.el-api>2.2</version.el-api>
		<version.jstl>1.2</version.jstl>
		<version.junit>4.12</version.junit>

		<version.log4j>1.2.17</version.log4j>
		<version.logback>1.1.3</version.logback>

		<version.servlet-api>2.5</version.servlet-api>
		<version.slf4j>1.7.12</version.slf4j>

		<version.spring>3.2.13.RELEASE</version.spring>

		<version.xml-apis>1.4.01</version.xml-apis>
		<version.xercesImpl>2.11.0</version.xercesImpl>

		<version.velocity>1.7</version.velocity>
		<version.velocity-tools>2.0</version.velocity-tools>

		<!--
			http://tiles.apache.org/framework/whats-new.html

			Removals in Tiles 3.0
			Upgraded from JavaSE 5.0 to JavaSE 6.0.
			Upgraded from Servlet 2.4 and JSP 2.0 to Servlet 2.5 and JSP 2.1.
			Changed the Java API to adopt the Request API. The XML files and taglibs are compatible with tiles 2.2.
			Dropped the parameter based configuration that was deprecated in 2.2.
		-->
		<version.tiles>3.0.5</version.tiles>

		<!--*********************end dependency plugins version************************************ -->

		<!--*********************begin plugins version************************************ -->
		<v.maven-antrun-plugin>1.8</v.maven-antrun-plugin>

		<v.maven-clean-plugin>2.6.1</v.maven-clean-plugin>
		<v.maven-compiler-plugin>3.3</v.maven-compiler-plugin>
		<v.maven-changelog-plugin>2.3</v.maven-changelog-plugin>

		<!-- CheckStyle能够帮助Java开发人员准守某些编码规范的工具。它能够自动检查代码。 -->
		<v.maven-checkstyle-plugin>2.13</v.maven-checkstyle-plugin>

		<v.maven-dependency-plugin>2.10</v.maven-dependency-plugin>
		<v.maven-deploy-plugin>2.8.2</v.maven-deploy-plugin>

		<v.maven-install-plugin>2.5.2</v.maven-install-plugin>
		<v.maven-javadoc-plugin>2.10.3</v.maven-javadoc-plugin>
		<v.maven-jar-plugin>2.6</v.maven-jar-plugin>
		<v.maven-jxr-plugin>2.5</v.maven-jxr-plugin>
		<v.maven-pmd-plugin>3.3</v.maven-pmd-plugin>

		<v.maven-site-plugin>3.4</v.maven-site-plugin>
		<v.maven-source-plugin>2.4</v.maven-source-plugin>
		<v.maven-surefire-plugin>2.17</v.maven-surefire-plugin>
		<v.maven-release-plugin>2.5.2</v.maven-release-plugin>
		<v.maven-resources-plugin>2.7</v.maven-resources-plugin>

		<v.maven-war-plugin>2.6</v.maven-war-plugin>

		<v.native2ascii-maven-plugin>1.0-beta-1</v.native2ascii-maven-plugin>
		<v.site-maven-plugin>0.12</v.site-maven-plugin>
		<v.sonar-maven-plugin>2.6</v.sonar-maven-plugin>

		<v.license-maven-plugin>2.6</v.license-maven-plugin>
		<!-- **********************end plugins version******************************************* -->

		<!-- **********************begin native2ascii config******************************************* -->
		<native2ascii-maven-plugin.pattern>**/*.properties</native2ascii-maven-plugin.pattern>
		<native2ascii-maven-plugin.encoding>${project.build.sourceEncoding}</native2ascii-maven-plugin.encoding>
		<!-- **********************end native2ascii config******************************************* -->

		<!-- **********************begin site-maven-plugin config******************************************* -->
		<site-maven-plugin.repositoryName>feilong-platform</site-maven-plugin.repositoryName>
		<site-maven-plugin.repositoryOwner>venusdrogon</site-maven-plugin.repositoryOwner>
		<site-maven-plugin.branch>refs/heads/repository</site-maven-plugin.branch>

		<!-- github server corresponds to entry in ~/.m2/settings.xml -->
		<github.global.server>github</github.global.server>
		<!-- **********************end site-maven-plugin config******************************************* -->

		<!-- **********************begin maven-javadoc-plugin config******************************************* -->
		<!-- 用来编译生成文档 -->
		<maven-javadoc-plugin.encoding>${project.build.sourceEncoding}</maven-javadoc-plugin.encoding>
		<maven-javadoc-plugin.docencoding>${project.build.sourceEncoding}</maven-javadoc-plugin.docencoding>
		<!-- 用来显示页面 META 部分 content="text/html; charset=GBK" -->
		<maven-javadoc-plugin.charset>${project.build.sourceEncoding}</maven-javadoc-plugin.charset>
		<!-- 用于读取javadoc 内部使用的 配置文件, 比如 描述文字为 描述,英文环境为description -->
		<maven-javadoc-plugin.locale>en_US</maven-javadoc-plugin.locale>

		<maven-javadoc-plugin.outputDirectory>file://${user.home}/feilong/javadoc/${project.version}</maven-javadoc-plugin.outputDirectory>
		<maven-javadoc-plugin.reportOutputDirectory>${user.home}/feilong/javadoc/${project.version}</maven-javadoc-plugin.reportOutputDirectory>
		<maven-javadoc-plugin.destDir>${project.name}</maven-javadoc-plugin.destDir>
		<maven-javadoc-plugin.javadocVersion>1.8</maven-javadoc-plugin.javadocVersion>
		<maven-javadoc-plugin.javadocDirectory>${env._FEILONGTAGLIB}/Apache Maven/javadoc/springframework</maven-javadoc-plugin.javadocDirectory>
		<maven-javadoc-plugin.stylesheetfile>${maven-javadoc-plugin.javadocDirectory}/stylesheet.css</maven-javadoc-plugin.stylesheetfile>
		<!-- If no custom stylesheet is specified in the <stylesheetfile/> parameter, the <stylesheet/> parameter will indicate which stylesheet will be used -->
		<!-- <maven-javadoc-plugin.stylesheet>java</maven-javadoc-plugin.stylesheet> -->

		<!-- **********************end maven-javadoc-plugin config******************************************* -->

		<developer.feilong.name>feilong</developer.feilong.name>
		<developer.feilong.email>venusdrogon@163.com</developer.feilong.email>
	</properties>

	<!-- 项目发布管理 -->
	<distributionManagement>
		<!-- <url>file://${user.home}/feilong/repository</url> -->
		<!-- -->
		<repository>
			<id>internal.repo</id>
			<name>Temporary Staging Repository</name>
			<url>file://${project.build.directory}/mvn-repo</url>
		</repository>

		<!-- <snapshotRepository>
			<id>baozun-nexus-snapshots</id>
			<name>baozun-nexus-snapshots</name>
			<url>http://10.8.12.100:8080/nexus/content/repositories/snapshots/</url>
			<uniqueVersion>false</uniqueVersion>
			</snapshotRepository> -->
	</distributionManagement>

	<dependencies>
		<!--******** slf4j******** -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
		</dependency>

		<!--***************************** test************************** -->
		<!-- junit -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>com.feilong.test</groupId>
			<artifactId>feilong-common-test</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<!--*********************dependencyManagement****************************** -->
	<dependencyManagement>
		<dependencies>
			<!--*******************feilong************************* -->
			<dependency>
				<groupId>com.feilong.platform</groupId>
				<artifactId>feilong-core</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>com.feilong.platform</groupId>
				<artifactId>feilong-servlet</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>com.feilong.platform.taglib</groupId>
				<artifactId>feilong-taglib-common</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>com.feilong.platform.taglib</groupId>
				<artifactId>feilong-taglib-display</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>com.feilong.platform.tools</groupId>
				<artifactId>feilong-tools-security</artifactId>
				<version>${project.version}</version>
			</dependency>

			<!--feilong-tools-velocity -->
			<dependency>
				<groupId>com.feilong.platform.tools</groupId>
				<artifactId>feilong-tools-velocity</artifactId>
				<version>${project.version}</version>
			</dependency>

			<!-- dom4j -->
			<dependency>
				<groupId>dom4j</groupId>
				<artifactId>dom4j</artifactId>
				<version>${version.dom4j}</version>
			</dependency>

			<!-- jstl -->
			<dependency>
				<groupId>javax.servlet</groupId>
				<artifactId>jstl</artifactId>
				<version>${version.jstl}</version>
			</dependency>

			<!-- *******************spring********************************* -->
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-framework-bom</artifactId>
				<version>${version.spring}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>

			<!-- aspectjweaver -->
			<dependency>
				<groupId>org.aspectj</groupId>
				<artifactId>aspectjweaver</artifactId>
				<version>${version.aspectjweaver}</version>
			</dependency>

			<!-- **************************************************** -->
			<!-- java mail -->
			<dependency>
				<groupId>javax.mail</groupId>
				<artifactId>mail</artifactId>
				<version>${version.javamail}</version>
			</dependency>

			<!-- *********************apache******************************* -->
			<dependency>
				<groupId>commons-logging</groupId>
				<artifactId>commons-logging</artifactId>
				<version>${version.commons-logging}</version>
			</dependency>

			<!-- commons-lang -->
			<dependency>
				<artifactId>commons-lang</artifactId>
				<groupId>commons-lang</groupId>
				<version>${version.commons-lang}</version>
			</dependency>

			<!-- commons-lang3 -->
			<dependency>
				<groupId>org.apache.commons</groupId>
				<artifactId>commons-lang3</artifactId>
				<version>${version.commons-lang3}</version>
			</dependency>

			<!-- commons-net -->
			<dependency>
				<groupId>commons-net</groupId>
				<artifactId>commons-net</artifactId>
				<version>${version.commons-net}</version>
			</dependency>

			<!-- commons-httpclient -->
			<dependency>
				<groupId>commons-httpclient</groupId>
				<artifactId>commons-httpclient</artifactId>
				<version>${version.commons-httpclient}</version>
			</dependency>

			<!-- commons-beanutils -->
			<dependency>
				<groupId>commons-beanutils</groupId>
				<artifactId>commons-beanutils</artifactId>
				<version>${version.commons-beanutils}</version>
			</dependency>

			<dependency>
				<groupId>commons-codec</groupId>
				<artifactId>commons-codec</artifactId>
				<version>${version.commons-codec}</version>
			</dependency>

			<dependency>
				<groupId>org.apache.commons</groupId>
				<artifactId>commons-jexl</artifactId>
				<version>${version.commons-jexl}</version>
			</dependency>

			<dependency>
				<groupId>commons-digester</groupId>
				<artifactId>commons-digester</artifactId>
				<version>${version.commons-digester}</version>
			</dependency>

			<dependency>
				<groupId>org.apache.commons</groupId>
				<artifactId>commons-email</artifactId>
				<version>${version.commons-email}</version>
			</dependency>

			<!--通用接口，它可以使应用程序通过多种途径读取配置信 -->
			<dependency>
				<groupId>commons-configuration</groupId>
				<artifactId>commons-configuration</artifactId>
				<version>${version.commons-configuration}</version>
				<exclusions>
					<exclusion>
						<artifactId>commons-lang</artifactId>
						<groupId>commons-lang</groupId>
					</exclusion>
					<exclusion>
						<artifactId>commons-logging</artifactId>
						<groupId>commons-logging</groupId>
					</exclusion>
				</exclusions>
			</dependency>
			<!-- commons-collections -->
			<dependency>
				<groupId>commons-collections</groupId>
				<artifactId>commons-collections</artifactId>
				<version>${version.commons-collections}</version>
			</dependency>

			<dependency>
				<groupId>commons-fileupload</groupId>
				<artifactId>commons-fileupload</artifactId>
				<version>${version.commons-fileupload}</version>
			</dependency>

			<dependency>
				<groupId>commons-io</groupId>
				<artifactId>commons-io</artifactId>
				<version>${version.commons-io}</version>
			</dependency>

			<!-- velocity -->
			<dependency>
				<groupId>org.apache.velocity</groupId>
				<artifactId>velocity</artifactId>
				<version>${version.velocity}</version>
			</dependency>

			<!-- *********************json******************************* -->

			<!-- org.json -->
			<dependency>
				<groupId>org.json</groupId>
				<artifactId>json</artifactId>
				<version>${version.org.json}</version>
			</dependency>

			<!-- 解决This parser does not support specification "null" version "null" -->
			<dependency>
				<groupId>xerces</groupId>
				<artifactId>xercesImpl</artifactId>
				<version>${version.xercesImpl}</version>
			</dependency>

			<!-- -->
			<dependency>
				<groupId>xml-apis</groupId>
				<artifactId>xml-apis</artifactId>
				<version>${version.xml-apis}</version>
			</dependency>

			<!--******** slf4j******** -->
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-api</artifactId>
				<version>${version.slf4j}</version>
			</dependency>

			<!-- ***********log4j *************** -->

			<!-- slf4j-log4j12 -->
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-log4j12</artifactId>
				<version>${version.slf4j}</version>
			</dependency>
			<!-- log4j -->
			<dependency>
				<groupId>log4j</groupId>
				<artifactId>log4j</artifactId>
				<version>${version.log4j}</version>
			</dependency>

			<!--******** logback ******** -->
			<dependency>
				<groupId>ch.qos.logback</groupId>
				<artifactId>logback-core</artifactId>
				<version>${version.logback}</version>
			</dependency>
			<dependency>
				<groupId>ch.qos.logback</groupId>
				<artifactId>logback-classic</artifactId>
				<version>${version.logback}</version>
			</dependency>

			<!--jul桥接 用来输出 Java Logging Framework (JUL) java.util.logging.* -->
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>jul-to-slf4j</artifactId>
				<version>${version.slf4j}</version>
			</dependency>

			<!-- jcl桥接，用来输出 第三方Jakarta Commons Logging (JCL) -->
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>jcl-over-slf4j</artifactId>
				<version>${version.slf4j}</version>
			</dependency>

			<!-- log4j桥接 -->
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>log4j-over-slf4j</artifactId>
				<version>${version.slf4j}</version>
			</dependency>

			<!--************************* tiles******************* -->
			<dependency>
				<groupId>org.apache.tiles</groupId>
				<artifactId>tiles-core</artifactId>
				<version>${version.tiles}</version>
				<exclusions>
					<exclusion>
						<groupId>org.slf4j</groupId>
						<artifactId>jcl-over-slf4j</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>org.apache.tiles</groupId>
				<artifactId>tiles-api</artifactId>
				<version>${version.tiles}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.tiles</groupId>
				<artifactId>tiles-jsp</artifactId>
				<version>${version.tiles}</version>
			</dependency>

			<!--********************************provided******************************** -->
			<!-- jsp-api -->
			<dependency>
				<groupId>javax.servlet.jsp</groupId>
				<artifactId>jsp-api</artifactId>
				<version>${version.jsp-api}</version>
				<scope>provided</scope>
			</dependency>

			<dependency>
				<groupId>javax.el</groupId>
				<artifactId>el-api</artifactId>
				<version>${version.el-api}</version>
				<scope>provided</scope>
			</dependency>

			<!-- servlet-api -->
			<dependency>
				<groupId>javax.servlet</groupId>
				<artifactId>servlet-api</artifactId>
				<version>${version.servlet-api}</version>
				<scope>provided</scope>
			</dependency>


			<!--***************************** test************************** -->
			<!-- junit -->
			<dependency>
				<groupId>junit</groupId>
				<artifactId>junit</artifactId>
				<version>${version.junit}</version>
				<scope>test</scope>
			</dependency>

			<dependency>
				<groupId>com.feilong.test</groupId>
				<artifactId>feilong-common-test</artifactId>
				<version>${version.feilong-common-test}</version>
				<scope>test</scope>
			</dependency>

			<dependency>
				<groupId>org.easymock</groupId>
				<artifactId>easymock</artifactId>
				<version>${version.easymock}</version>
				<scope>test</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<!--********************************build****************************************** -->
	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-site-plugin</artifactId>
				<version>${v.maven-site-plugin}</version>
			</plugin>

			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>sonar-maven-plugin</artifactId>
				<version>${v.sonar-maven-plugin}</version>
			</plugin>

			<plugin>
				<groupId>com.github.github</groupId>
				<artifactId>site-maven-plugin</artifactId>
				<version>${v.site-maven-plugin}</version>
				<configuration>
					<!-- git commit message -->
					<message>Maven artifacts for ${project.version}</message>
					<!-- disable webpage processing -->
					<noJekyll>true</noJekyll>

					<!-- matches distribution management repository url above -->
					<outputDirectory>${project.build.directory}/mvn-repo</outputDirectory>

					<merge>true</merge>

					<!-- remote branch name -->
					<branch>${site-maven-plugin.branch}</branch>
					<includes>
						<include>**/*</include>
					</includes>
					<!-- github repo name -->
					<repositoryName>${site-maven-plugin.repositoryName}</repositoryName>
					<!-- github username -->
					<repositoryOwner>${site-maven-plugin.repositoryOwner}</repositoryOwner>

				</configuration>
				<executions>
					<!-- run site-maven-plugin's 'site' target as part of the build's normal 'deploy' phase -->
					<execution>
						<goals>
							<goal>site</goal>
						</goals>
						<phase>deploy</phase>
					</execution>
				</executions>
			</plugin>

			<!-- 国际化插件 -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>native2ascii-maven-plugin</artifactId>
				<version>${v.native2ascii-maven-plugin}</version>

				<configuration>
					<encoding>${native2ascii-maven-plugin.encoding}</encoding>
					<includes>
						<include>classes\${native2ascii-maven-plugin.pattern}</include>
						<include>test-classes\${native2ascii-maven-plugin.pattern}</include>
					</includes>
					<workDir>${project.build.directory}</workDir>
					<tempDir>${project.build.directory}</tempDir>
				</configuration>

				<executions>
					<execution>
						<id>native2ascii</id>
						<!-- 默认是 phase process-classes -->
						<!-- <phase>compile</phase> -->
						<goals>
							<goal>native2ascii</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<!-- license插件 -->
			<plugin>
				<groupId>com.mycila</groupId>
				<artifactId>license-maven-plugin</artifactId>
				<version>${v.license-maven-plugin}</version>
				<configuration>
					<header>com/mycila/maven/plugin/license/templates/APACHE-2.txt</header>
					<properties>
						<owner>${developer.feilong.name}</owner>
						<year>${project.inceptionYear}</year>
						<email>${developer.feilong.email}</email>
					</properties>
					<!-- -->
					<excludes>
						<exclude>**/README</exclude>
						<exclude>src/test/resources/**</exclude>
						<exclude>**/src/main/resources/**</exclude>
					</excludes>
					<includes>
						<includes>**/src/main/java/**/*.java</includes>
						<!-- <includes>**/src/main/java/com/feilong/commons/core/log/**</includes> -->
					</includes>

					<headerDefinitions>
						<headerDefinition>${env._FEILONGTAGLIB}\Apache Maven\javadoc_style.xml</headerDefinition>
					</headerDefinitions>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>format</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<!-- maven-resources-plugin插件 -->
			<plugin>
				<artifactId>maven-resources-plugin</artifactId>
				<version>${v.maven-resources-plugin}</version>
				<configuration>
					<encoding>${project.build.sourceEncoding}</encoding>
					<includeEmptyDirs>true</includeEmptyDirs>
				</configuration>
				<executions>
					<execution>
						<id>default-resources</id>
						<phase>process-resources</phase>
						<goals>
							<goal>resources</goal>
						</goals>
						<configuration>
							<detail>true</detail>
						</configuration>
					</execution>
					<!-- -->
					<execution>
						<id>default-testResources</id>
						<phase>process-test-resources</phase>
						<goals>
							<goal>testResources</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<!-- maven-compiler-plugin -->
			<plugin>
				<!-- true or false，是否此插件配置将会应用于poms，那些继承于此的项目 -->
				<inherited>true</inherited>

				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>${v.maven-compiler-plugin}</version>
				<configuration>
					<!-- 指定高版本的源码和编译后的字节码文件 -->
					<source>${maven-compiler-plugin.source}</source>
					<target>${maven-compiler-plugin.target}</target>
					<encoding>${maven-compiler-plugin.encoding}</encoding>
					<!-- <verbose>true</verbose> -->
					<detail>true</detail>
				</configuration>
			</plugin>

			<!-- maven-jar-plugin -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>${v.maven-jar-plugin}</version>
				<configuration>
					<archive>
						<addMavenDescriptor>false</addMavenDescriptor>
					</archive>
				</configuration>
			</plugin>

			<!-- maven-source-plugin -->
			<plugin>
				<inherited>true</inherited>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
				<version>${v.maven-source-plugin}</version>
				<executions>
					<execution>
						<id>attach-sources</id>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<!-- maven-javadoc-plugin -->
			<plugin>
				<inherited>true</inherited>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>${v.maven-javadoc-plugin}</version>
				<configuration>
					<verbose>true</verbose>
					<destDir>${maven-javadoc-plugin.destDir}</destDir>

					<outputDirectory>${maven-javadoc-plugin.outputDirectory}</outputDirectory>
					<reportOutputDirectory>${maven-javadoc-plugin.reportOutputDirectory}</reportOutputDirectory>

					<!-- If no custom stylesheet is specified in the <stylesheetfile/> parameter, the <stylesheet/> parameter will indicate which stylesheet will be used -->
					<!-- <stylesheet>${maven-javadoc-plugin.stylesheet}</stylesheet> -->

					<!-- <stylesheetfile>${maven-javadoc-plugin.stylesheetfile}</stylesheetfile> -->

					<overview>src/main/java/overview.html</overview>

					<!-- -->
					<docfilessubdirs>true</docfilessubdirs>
					<!-- <javadocDirectory>${maven-javadoc-plugin.javadocDirectory}</javadocDirectory> -->
					<javadocVersion>${maven-javadoc-plugin.javadocVersion}</javadocVersion>

					<!-- Specifies the title to be placed in the HTML title tag.  -->
					<windowtitle>${project.name} ${project.version} API create by feilong</windowtitle>

					<!-- Specifies whether or not the author text is included in the generated Javadocs.  -->
					<author>true</author>
					<!-- Includes the version text in the generated docs.  -->
					<version>true</version>

					<failOnError>false</failOnError>

					<locale>${maven-javadoc-plugin.locale}</locale>

					<charset>${maven-javadoc-plugin.charset}</charset>
					<docencoding>${maven-javadoc-plugin.docencoding}</docencoding>
					<encoding>${maven-javadoc-plugin.encoding}</encoding>

					<header>${project.name} ${project.version} API</header>
					<footer>${project.name} ${project.version} API</footer>

					<bottom>
						<![CDATA[Copyright &copy; {inceptionYear}-{currentYear} by feilong]]>
					</bottom>

					<groups>
						<group>
							<title>Date package 日期</title>
							<packages>com.feilong.core.date</packages>
						</group>

						<group>
							<title>IO package</title>
							<packages>com.feilong.core.io</packages>
						</group>

						<group>
							<title>net package</title>
							<packages>com.feilong.core.net</packages>
						</group>

						<group>
							<title>util package</title>
							<packages>com.feilong.core.util</packages>
						</group>
					</groups>
				</configuration>
			</plugin>

			<!-- maven-surefire-plugin -->
			<plugin>
				<inherited>true</inherited>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>${v.maven-surefire-plugin}</version>
				<configuration>
					<!-- 跳过测试 -->
					<skip>true</skip>
				</configuration>
			</plugin>

			<!-- maven-clean-plugin插件 -->
			<plugin>
				<inherited>true</inherited>
				<artifactId>maven-clean-plugin</artifactId>
				<version>${v.maven-clean-plugin}</version>
				<executions>
					<execution>
						<id>default-clean</id>
						<phase>clean</phase>
						<goals>
							<goal>clean</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<!-- maven-deploy-plugin插件 -->
			<plugin>
				<inherited>true</inherited>
				<artifactId>maven-deploy-plugin</artifactId>
				<version>${v.maven-deploy-plugin}</version>
				<configuration>
					<!-- Format: id::layout::url -->
					<!-- <altDeploymentRepository>internal.repo::default::file://${user.home}/feilong/repository</altDeploymentRepository> -->
					<altDeploymentRepository>internal.repo::default::file://${project.build.directory}/mvn-repo</altDeploymentRepository>
				</configuration>
				<executions>
					<execution>
						<id>default-deploy</id>
						<phase>deploy</phase>
						<goals>
							<goal>deploy</goal>
						</goals>
					</execution>
				</executions>
				<dependencies>
					<dependency>
						<groupId>com.google.code.maven-svn-wagon</groupId>
						<artifactId>maven-svn-wagon</artifactId>
						<version>1.4</version>
					</dependency>
				</dependencies>
			</plugin>

			<!-- maven-install-plugin插件 -->
			<plugin>
				<inherited>true</inherited>
				<artifactId>maven-install-plugin</artifactId>
				<version>${v.maven-install-plugin}</version>
				<executions>
					<execution>
						<id>default-install</id>
						<phase>install</phase>
						<goals>
							<goal>install</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<!-- maven-release-plugin -->
			<plugin>
				<inherited>true</inherited>
				<artifactId>maven-release-plugin</artifactId>
				<version>${v.maven-release-plugin}</version>
				<configuration>
					<autoVersionSubmodules>true</autoVersionSubmodules>
				</configuration>
			</plugin>

			<!-- maven-dependency-plugin -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<version>${v.maven-dependency-plugin}</version>
			</plugin>
		</plugins>

		<!-- pluginManagement -->
		<pluginManagement>
			<plugins>
				<plugin>
					<artifactId>maven-antrun-plugin</artifactId>
					<version>${v.maven-antrun-plugin}</version>
				</plugin>

				<plugin>
					<artifactId>maven-war-plugin</artifactId>
					<version>${v.maven-war-plugin}</version>
				</plugin>

				<!--This plugin's configuration is used to store Eclipse m2e settings only. It has no influence on the Maven build itself. -->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.apache.maven.plugins</groupId>
										<artifactId>maven-antrun-plugin</artifactId>
										<versionRange>[1.7,)</versionRange>
										<goals>
											<goal>run</goal>
											<goal>help</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.codehaus.mojo</groupId>
										<artifactId>native2ascii-maven-plugin</artifactId>
										<versionRange>[1.0-beta-1,)</versionRange>
										<goals>
											<goal>native2ascii</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>


	<reporting>
		<plugins>
			<!-- maven-javadoc-plugin -->
			<plugin>
				<inherited>true</inherited>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>${v.maven-javadoc-plugin}</version>
				<configuration>
					<verbose>true</verbose>
					<destDir>${maven-javadoc-plugin.destDir}</destDir>

					<outputDirectory>${maven-javadoc-plugin.outputDirectory}</outputDirectory>
					<reportOutputDirectory>${maven-javadoc-plugin.reportOutputDirectory}</reportOutputDirectory>

					<!-- If no custom stylesheet is specified in the <stylesheetfile/> parameter, the <stylesheet/> parameter will indicate which stylesheet will be used -->
					<!-- <stylesheet>${maven-javadoc-plugin.stylesheet}</stylesheet> -->

					<!-- <stylesheetfile>${maven-javadoc-plugin.stylesheetfile}</stylesheetfile> -->

					<overview>src/main/java/overview.html</overview>

					<!-- -->
					<docfilessubdirs>true</docfilessubdirs>
					<!-- <javadocDirectory>${maven-javadoc-plugin.javadocDirectory}</javadocDirectory> -->
					<javadocVersion>${maven-javadoc-plugin.javadocVersion}</javadocVersion>

					<!-- Specifies the title to be placed in the HTML title tag.  -->
					<windowtitle>${project.name} ${project.version} API create by feilong</windowtitle>

					<!-- Specifies whether or not the author text is included in the generated Javadocs.  -->
					<author>true</author>
					<!-- Includes the version text in the generated docs.  -->
					<version>true</version>

					<failOnError>false</failOnError>

					<locale>${maven-javadoc-plugin.locale}</locale>

					<charset>${maven-javadoc-plugin.charset}</charset>
					<docencoding>${maven-javadoc-plugin.docencoding}</docencoding>
					<encoding>${maven-javadoc-plugin.encoding}</encoding>

					<header>${project.name} ${project.version} API</header>
					<footer>${project.name} ${project.version} API</footer>

					<bottom>
						<![CDATA[Copyright &copy; {inceptionYear}-{currentYear} by feilong]]>
					</bottom>

					<groups>
						<group>
							<title>Date package 日期</title>
							<packages>com.feilong.core.date</packages>
						</group>
						<group>
							<title>IO package</title>
							<packages>com.feilong.core.io</packages>
						</group>
						<group>
							<title>net package</title>
							<packages>com.feilong.core.net</packages>
						</group>
						<group>
							<title>util package</title>
							<packages>com.feilong.core.util</packages>
						</group>
					</groups>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jxr-plugin</artifactId>
				<version>${v.maven-jxr-plugin}</version>
				<configuration>
					<aggregate>range</aggregate>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-checkstyle-plugin</artifactId>
				<version>${v.maven-checkstyle-plugin}</version>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<version>${v.maven-dependency-plugin}</version>
			</plugin>

			<!--
				<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-pmd-plugin</artifactId>
				<version>${v.maven-pmd-plugin}</version>
				</plugin>
			-->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>taglist-maven-plugin</artifactId>
				<version>2.4</version>
			</plugin>


			<!-- [ERROR] 'git' 不是内部或外部命令，也不是可运行的程序 或批处理文件。 -->
			<!---->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-changelog-plugin</artifactId>
				<version>${v.maven-changelog-plugin}</version>
				<configuration>
					<type>range</type>
					<range>30</range>
					<headingDateFormat>yyyy-MM-dd</headingDateFormat>
					<dateFormat>yyyy-MM-dd HH:mm:ss</dateFormat>
				</configuration>
			</plugin>
		</plugins>
	</reporting>

	<!-- 指定这个项目的组织机构信息 -->
	<organization>
		<name>feiLong</name>
		<url>http://venusdrogon.github.io/feilong-platform/</url>
	</organization>

	<!-- 项目提交者信息 -->
	<developers>
		<developer>
			<id>feilong</id>
			<name>金鑫</name>
			<email>${developer.feilong.email}</email>
			<url>http://venusdrogon.github.io/feilong-platform/</url>
			<organization>feilong</organization>
			<organizationUrl>http://venusdrogon.github.io/feilong-platform/</organizationUrl>
			<roles>
				<role>architect</role>
				<role>developer</role>
			</roles>
			<timezone>8</timezone>
			<properties>
				<qq>190600641</qq>
			</properties>
		</developer>
	</developers>

	<licenses>
		<license>
			<name>The Apache Software License, Version 2.0</name>
			<url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
			<distribution>repo</distribution>
			<comments>A business-friendly OSS license</comments>
		</license>
	</licenses>

</project>